# Amazon Q pre block. Keep at the top of this file.
[[ -f "${HOME}/Library/Application Support/amazon-q/shell/zshrc.pre.zsh" ]] && builtin source "${HOME}/Library/Application Support/amazon-q/shell/zshrc.pre.zsh"
zmodload zsh/zprof

export ANDROID_HOME=$HOME/Library/Android/sdk
export PATH=$PATH:$ANDROID_HOME/emulators
PSQL_PATH="/Applications/Postgres.app/Contents/Versions/latest/bin"
export PATH=$PATH:$PSQL_PATH
export PATH=/usr/local/bin:$PATH
export PATH="$HOME/bin/nvim-macos-arm64/bin:$PATH"

alias nvim="$HOME/bin/nvim-macos-arm64/bin/nvim"

# AI
export GEMINI_API_KEY={{ onepasswordRead "op://Private/Gemini API key/credential" }}
# Neovim MCPs
# export GITHUB_PERSONAL_ACCESS_TOKEN={{ onepasswordRead "op://Private/GitHub PAT old.1/credential" }}
# export GITHUB_PERSONAL_ACCESS_TOKEN={{ onepasswordRead "op://Private/GitHub PAT old.2/credential" }}
export GITHUB_PERSONAL_ACCESS_TOKEN={{ onepasswordRead "op://Private/GitHub PAT/credential" }}
export TAVILY_API_KEY={{ onepasswordRead "op://Private/Tavily API key/credential" }}
export BRAVE_API_KEY={{ onepasswordRead "op://Private/Brave API key/credential"  }}
export OPENAI_API_KEY={{ onepasswordRead "op://Private/OpenAI MCP key/credential"  }}
# Workaround for Cursor getting stuck in the terminal
[[ "$TERM_PROGRAM" == "vscode" ]] && . "$(code --locate-shell-integration-path zsh --user-data-dir='.' --no-sandbox)"

# Novata
export OSO_AUTH=e_0123456789_12345_osotesttoken01xiIn
export COMPOSE_PROJECT_NAME=bob

# Prevents ^ (and some other characters) from being interpreted as a glob (ref: npm i)
# unsetopt extended_globG

# load time profiling
# uncomment and run timezsh in terminal
# timezsh() {
#   shell=${1-$SHELL}
#   for i in $(seq 1 10); do /usr/bin/time $shell -i -c exit; done
# }

# nvm is the biggest cause of slow startup times
# Based on this article: https://blog.mattclemente.com/2020/06/26/oh-my-zsh-slow-to-load/#:~:text=Caching%20Eval%20statements.-,Lazy%20Loading,-The%20issue%20with
export NVM_LAZY_LOAD=true
export NVM_COMPLETION=true
export NVM_DIR="$HOME/.nvm"
# [ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh" # This loads nvm
# [ -s "$NVM_DIR/bash_completion" ] && \. "$NVM_DIR/bash_completion"  # This loads nvm bash_completion

plugins=(
  zsh-nvm
  git
  zsh-syntax-highlighting
  z
  fzf
)

export EDITOR='nvim'
export FZF_BASE=/usr/local/bin/fzf

export ZSH=$HOME/.oh-my-zsh
export ZSH_CUSTOM="$ZSH/custom"

# Needs to come after the plugin are loaded
source $ZSH/oh-my-zsh.sh

# Pure theme https://github.com/sindresorhus/pure
fpath+=("$(brew --prefix)/share/zsh/site-functions")
ZSH_THEME="PURE"
autoload -U promptinit; promptinit
prompt pure
zstyle :prompt:pure:git:stash show yes

# Uncomment the following line to use case-sensitive completion.
# CASE_SENSITIVE="true"

# Uncomment the following line to use hyphen-insensitive completion.
# Case-sensitive completion must be off. _ and - will be interchangeable.
# HYPHEN_INSENSITIVE="true"

# Uncomment the following line to disable bi-weekly auto-update checks.
# DISABLE_AUTO_UPDATE="true"

# Uncomment the following line to automatically update without prompting.
# DISABLE_UPDATE_PROMPT="true"

# Uncomment the following line to change how often to auto-update (in days).
# export UPDATE_ZSH_DAYS=13

# Uncomment the following line if pasting URLs and other text is messed up.
# DISABLE_MAGIC_FUNCTIONS="true"

# Uncomment the following line to disable colors in ls.
# DISABLE_LS_COLORS="true"

# Uncomment the following line to disable auto-setting terminal title.
# DISABLE_AUTO_TITLE="true"

# Uncomment the following line to enable command auto-correction.
# ENABLE_CORRECTION="true"

# Uncomment the following line to display red dots whilst waiting for completion.
# Caution: this setting can cause issues with multiline prompts (zsh 5.7.1 and newer seem to work)
# See https://github.com/ohmyzsh/ohmyzsh/issues/5765
# COMPLETION_WAITING_DOTS="true"

# Uncomment the following line if you want to disable marking untracked files
# under VCS as dirty. This makes repository status check for large repositories
# much, much faster.
# DISABLE_UNTRACKED_FILES_DIRTY="true"

# Uncomment the following line if you want to change the command execution time
# stamp shown in the history command output.
# You can set one of the optional three formats:
# "mm/dd/yyyy"|"dd.mm.yyyy"|"yyyy-mm-dd"
# or set a custom format using the strftime function format specifications,
# see 'man strftime' for details.
# HIST_STAMPS="mm/dd/yyyy"

# for plugin ($plugins); do
#   if [ -f $ZSH_CUSTOM/plugins/$plugin/$plugin.plugin.zsh ]; then
#     source $ZSH_CUSTOM/plugins/$plugin/$plugin.plugin.zsh
#   elif [ -f $ZSH/plugins/$plugin/$plugin.plugin.zsh ]; then
#     source $ZSH/plugins/$plugin/$plugin.plugin.zsh
#   fi
# done

# Confetti on successful git push
function pu() {
  git push
  if [ $? -eq 0 ]; then
    (&>/dev/null open raycast://confetti &)
  fi
}

# bit
export PATH="$PATH:/Users/jamesbackhouse/bin"
# bit end

# eval "$(pyenv init -)"
# eval "$(mise activate zsh)"

# pnpm
export PNPM_HOME="/Users/jamesbackhouse/Library/pnpm"
case ":$PATH:" in
  *":$PNPM_HOME:"*) ;;
  *) export PATH="$PNPM_HOME:$PATH" ;;
esac
# pnpm end

# Amazon Q post block. Keep at the bottom of this file.
[[ -f "${HOME}/Library/Application Support/amazon-q/shell/zshrc.post.zsh" ]] && builtin source "${HOME}/Library/Application Support/amazon-q/shell/zshrc.post.zsh"
